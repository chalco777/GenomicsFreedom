from flask import Flask, render_template, request, redirect, url_for
from Bio import SeqIO
from Bio.SeqUtils import gc_fraction
from io import StringIO
import json
import matplotlib
import seaborn as sns
matplotlib.use('Agg')  # Para evitar problemas con GUI
import matplotlib.pyplot as plt
import numpy as np
import base64
from io import BytesIO
from collections import Counter

app = Flask(__name__)

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/analyze', methods=['POST'])
def analyze():
    sequences = []
    
    # Procesar secuencias manuales
    manual_sequences = request.form.getlist('manual_sequences[]')
    manual_titles = request.form.getlist('manual_titles[]')
    
    for title, seq in zip(manual_titles, manual_sequences):
        if seq.strip():
            sequences.append({'title': title, 'sequence': seq})
    
    # Procesar archivo FASTA
    fasta_file = request.files.get('fasta_file')
    if fasta_file and fasta_file.filename != '':
        fasta_content = fasta_file.read().decode('utf-8')
        fasta_io = StringIO(fasta_content)
        for record in SeqIO.parse(fasta_io, "fasta"):
            sequences.append({'title': record.id, 'sequence': str(record.seq)})
    
    # Si no hay secuencias, redirigir a la página principal
    if not sequences:
        return redirect(url_for('index'))
    
    # Calcular estadísticas para cada secuencia
    for seq_data in sequences:
        sequence = seq_data['sequence']
        seq_data['length'] = len(sequence)
        seq_data['gc'] = 100*gc_fraction(sequence, ambiguous="ignore")
        
        # Contar bases
        bases = {'A': 0, 'T': 0, 'C': 0, 'G': 0, 'N': 0}
        for base in sequence.upper():
            if base in bases:
                bases[base] += 1
            else:
                bases['N'] += 1  # Bases no reconocidas
        seq_data['bases'] = bases
    
    # Generar histograma de longitudes
    histogram_img = generate_histogram([s['length'] for s in sequences])
    
    # Calcular estadísticas globales
    global_stats = {
        'total_sequences': len(sequences),
        'total_bases': sum(s['length'] for s in sequences),
        'avg_gc': np.mean([s['gc'] for s in sequences]),
        'base_percentages': calculate_base_percentages(sequences)
    }
    
    # Renderizar la página de resultados con los datos
    return render_template('results.html', 
                           sequences=sequences, 
                           global_stats=global_stats,
                           histogram_img=histogram_img)

def calculate_base_percentages(sequences):
    """Calcula el porcentaje de cada base en todas las secuencias"""
    total_bases = sum(s['length'] for s in sequences)
    base_counts = Counter()
    
    for seq in sequences:
        for base, count in seq['bases'].items():
            base_counts[base] += count
    
    return {base: (count / total_bases) * 100 for base, count in base_counts.items()}

# Cambiar la función generate_histogram
def generate_histogram(lengths):
    """Genera un histograma de longitudes de secuencia con Seaborn"""
    plt.figure(figsize=(8, 4))
    
    # Usar Seaborn para un histograma más profesional
    sns.set(style="whitegrid")
    ax = sns.histplot(lengths, bins=15, color='#e63946', kde=True, edgecolor='black')
    
    plt.title('Distribución de Longitudes de Secuencias', fontsize=14)
    plt.xlabel('Longitud (bp)', fontsize=12)
    plt.ylabel('Número de Secuencias', fontsize=12)
    
    # Añadir línea de promedio
    if lengths:
        mean_length = np.mean(lengths)
        plt.axvline(mean_length, color='#2a9d8f', linestyle='dashed', linewidth=2)
        plt.text(mean_length*1.05, plt.ylim()[1]*0.9, 
                 f'Media: {mean_length:.0f} bp', 
                 color='#2a9d8f', fontsize=12)
    
    # Guardar en buffer
    buffer = BytesIO()
    plt.savefig(buffer, format='png', bbox_inches='tight', dpi=100)
    plt.close()
    
    # Convertir a base64 para incrustar en HTML
    img_data = base64.b64encode(buffer.getvalue()).decode('utf-8')
    return f"data:image/png;base64,{img_data}"

if __name__ == '__main__':
    app.run(debug=True)/* ... otros estilos ... */

/* Nuevos estatos para estadísticas */
.base-distribution {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin-top: 0.5rem;
}

.base-item {
    display: flex;
    align-items: center;
    background-color: rgba(30, 30, 30, 0.5);
    padding: 0.5rem 1rem;
    border-radius: 5px;
    min-width: 100px;
}

.base-label {
    font-weight: bold;
    margin-right: 0.5rem;
}

.A { color: #ff6b6b; }
.T { color: #457b9d; }
.C { color: #2a9d8f; }
.G { color: #f4a261; }
.N { color: #adb5bd; }

.sequence-stats-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1rem;
    margin-top: 1rem;
}

.sequence-stat-card {
    background-color: rgba(30, 30, 30, 0.5);
    padding: 1rem;
    border-radius: 8px;
    border-left: 3px solid var(--accent-purple);
}

.seq-stats-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 0.5rem;
    margin-top: 0.5rem;
}

.seq-stat {
    display: flex;
    justify-content: space-between;
    padding: 0.3rem 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.seq-stat-label {
    font-weight: bold;
    color: var(--text-gray);
}

/* ... otros estilos ... */

/* Añadir esto al final del archivo */

/* Contenedor principal */
.results-container {
    max-width: 1400px;
    margin: 2rem auto;
    padding: 2rem;
    background-color: rgba(30, 30, 30, 0.7);
    border-radius: 15px;
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.7);
}

/* Cuadrícula de paneles */
.panel-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;
    margin-top: 2rem;
}

.panel {
    background-color: rgba(40, 40, 40, 0.8);
    border-radius: 12px;
    padding: 1.5rem;
    border: 1px solid rgba(230, 57, 70, 0.2);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

.panel-full {
    grid-column: 1 / -1;
}

/* Cabeceras de panel */
.panel h3 {
    color: var(--accent-blue);
    border-bottom: 2px solid rgba(69, 123, 157, 0.3);
    padding-bottom: 0.5rem;
    margin-bottom: 1.5rem;
    font-size: 1.4rem;
    display: flex;
    align-items: center;
}

.panel h3 i {
    margin-right: 12px;
    font-size: 1.2rem;
}/* Variables de colores */
:root {
    --primary-red: #e63946;
    --dark-red: #d00000;
    --light-red: #ff6b6b;
    --dark-bg: #0a0a0a;
    --light-bg: #1a1a1a;
    --text-light: #f8f9fa;
    --text-gray: #adb5bd;
    --accent-blue: #457b9d;
    --accent-green: #2a9d8f;
    --accent-purple: #6a4c93;
}

/* Estilos generales */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

body {
    background-color: var(--dark-bg);
    color: var(--text-light);
    overflow-x: hidden;
    min-height: 100vh;
    position: relative;
}

/* Fondo interactivo */
#interactive-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
    overflow: hidden;
}

.dna-particle {
    position: absolute;
    background: rgba(230, 57, 70, 0.2);
    border-radius: 50%;
    pointer-events: none;
}

/* Cabecera */
header {
    text-align: center;
    padding: 4rem 2rem 2rem;
    position: relative;
}

.logo {
    font-size: 5rem;
    margin-bottom: 1rem;
    color: var(--primary-red);
    text-shadow: 0 0 20px rgba(230, 57, 70, 0.7);
    letter-spacing: 2px;
    animation: pulse 3s infinite;
}

.tagline {
    font-size: 1.5rem;
    color: var(--text-gray);
    max-width: 800px;
    margin: 0 auto;
    font-weight: 300;
}

/* Secciones */
section {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
    background-color: rgba(30, 30, 30, 0.8);
    border-radius: 15px;
    margin-bottom: 2rem;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
    border: 1px solid rgba(230, 57, 70, 0.1);
}

h2 {
    color: var(--primary-red);
    margin-bottom: 1.5rem;
    font-size: 2rem;
    display: flex;
    align-items: center;
}

h2 i {
    margin-right: 10px;
}

.about-content {
    line-height: 1.8;
    font-size: 1.1rem;
    color: var(--text-gray);
}

.highlight {
    color: var(--light-red);
    font-weight: 600;
}

/* Formulario de secuencias */
.sequence-input-container {
    display: flex;
    gap: 2rem;
    flex-wrap: wrap;
}

.input-method {
    flex: 1;
    min-width: 300px;
}

.input-method h3 {
    color: var(--accent-blue);
    margin-bottom: 1rem;
    font-size: 1.3rem;
}

.form-group {
    margin-bottom: 1.5rem;
}

label {
    display: block;
    margin-bottom: 0.5rem;
    color: var(--text-light);
}

input, textarea, select {
    width: 100%;
    padding: 12px 15px;
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    background-color: rgba(10, 10, 10, 0.5);
    color: var(--text-light);
    font-size: 1rem;
    transition: all 0.3s ease;
}

input:focus, textarea:focus, select:focus {
    outline: none;
    border-color: var(--primary-red);
    box-shadow: 0 0 0 3px rgba(230, 57, 70, 0.2);
}

textarea {
    min-height: 150px;
    resize: vertical;
    font-family: monospace;
}

.sequence-entry {
    background-color: rgba(20, 20, 20, 0.5);
    padding: 1.5rem;
    border-radius: 10px;
    margin-bottom: 1.5rem;
    border-left: 4px solid var(--accent-green);
}

.btn {
    padding: 12px 25px;
    border-radius: 8px;
    border: none;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

.btn i {
    margin-right: 8px;
}

.btn-primary {
    background-color: var(--primary-red);
    color: white;
}

.btn-primary:hover {
    background-color: var(--dark-red);
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(230, 57, 70, 0.4);
}

.btn-secondary {
    background-color: rgba(255, 255, 255, 0.1);
    color: var(--text-light);
}

.btn-secondary:hover {
    background-color: rgba(255, 255, 255, 0.2);
}

.action-buttons {
    display: flex;
    gap: 1rem;
    margin-top: 1rem;
    flex-wrap: wrap;
}

/* Animaciones */
@keyframes pulse {
    0% { text-shadow: 0 0 10px rgba(230, 57, 70, 0.5); }
    50% { text-shadow: 0 0 30px rgba(230, 57, 70, 0.8); }
    100% { text-shadow: 0 0 10px rgba(230, 57, 70, 0.5); }
}

@keyframes float {
    0% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
    100% { transform: translateY(0px); }
}

/* Responsive */
@media (max-width: 768px) {
    .logo {
        font-size: 3.5rem;
    }
    
    .sequence-input-container {
        flex-direction: column;
    }
}// Crear fondo interactivo con partículas de ADN
function createInteractiveBackground() {
    const bg = document.getElementById('interactive-bg');
    if (!bg) return;
    
    const particleCount = 50;
    
    for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.classList.add('dna-particle');
        
        // Tamaño aleatorio
        const size = Math.random() * 20 + 5;
        particle.style.width = `${size}px`;
        particle.style.height = `${size}px`;
        
        // Posición aleatoria
        particle.style.left = `${Math.random() * 100}%`;
        particle.style.top = `${Math.random() * 100}%`;
        
        // Animación
        particle.style.animation = `float ${Math.random() * 10 + 5}s infinite ease-in-out`;
        particle.style.animationDelay = `${Math.random() * 5}s`;
        
        // Color aleatorio (tonos de rojo)
        const opacity = Math.random() * 0.4 + 0.1;
        const redValue = Math.floor(Math.random() * 55 + 200);
        particle.style.backgroundColor = `rgba(${redValue}, 57, 70, ${opacity})`;
        
        bg.appendChild(particle);
    }
}

// Visualizar contenido de archivo FASTA
function setupFilePreview() {
    const fileInput = document.getElementById('fasta-file');
    const fileContent = document.getElementById('file-content');
    
    if (fileInput && fileContent) {
        fileInput.addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    fileContent.value = e.target.result;
                };
                reader.readAsText(file);
            }
        });
    }
}

// Añadir nueva entrada de secuencia
function addSequenceEntry() {
    const container = document.getElementById('manual-sequences');
    if (!container) return;
    
    const newEntry = document.createElement('div');
    newEntry.className = 'sequence-entry';
    newEntry.innerHTML = `
        <div class="form-group">
            <label>Título de la Secuencia</label>
            <input type="text" name="manual_titles[]" placeholder="Ej: Gen TP53 humano">
        </div>
        
        <div class="form-group">
            <label>Secuencia Genética (ADN)</label>
            <textarea name="manual_sequences[]" placeholder="Ingresa la secuencia de nucleótidos (A, T, C, G)..."></textarea>
        </div>
    `;
    container.appendChild(newEntry);
}

// Inicializar eventos
document.addEventListener('DOMContentLoaded', function() {
    createInteractiveBackground();
    setupFilePreview();
    
    // Botón para añadir secuencia
    const addSequenceBtn = document.getElementById('add-sequence');
    if (addSequenceBtn) {
        addSequenceBtn.addEventListener('click', addSequenceEntry);
    }
});

// Al final de main.js
if (document.getElementById('interactive-bg')) {
    createInteractiveBackground();
}
// Visualizar secuencia de ADN
function visualizeDNA() {
    const dnaContainer = document.getElementById('dna-sequence-display');
    if (!dnaContainer) return;

    // Obtener datos de secuencias del elemento oculto
    const sequencesDataElement = document.getElementById('sequences-data');
    if (!sequencesDataElement) return;
    
    const sequences = JSON.parse(sequencesDataElement.dataset.sequences);
    const sequenceSelect = document.getElementById('sequence-select');
    if (!sequenceSelect) return;

    const sequenceIndex = parseInt(sequenceSelect.value);
    const sequence = sequences[sequenceIndex].sequence;

    // Generar visualización de ADN
    let dnaSequence = '';
    const displaySequence = sequence.substring(0, 120);

    for (let i = 0; i < displaySequence.length; i++) {
        const base = displaySequence[i].toUpperCase();
        const validBases = ['A', 'T', 'C', 'G'];
        const baseClass = validBases.includes(base) ? base : 'N';
        dnaSequence += `<span class="dna-base ${baseClass}">${base}</span>`;
    }

    if (sequence.length > 120) {
        dnaSequence += `<span style="color: var(--text-gray);">... (${sequence.length - 120} más)</span>`;
    }

    dnaContainer.innerHTML = dnaSequence;
}

// Actualizar visualización al cambiar secuencia
function setupSequenceSelector() {
    const sequenceSelect = document.getElementById('sequence-select');
    if (!sequenceSelect) return;

    sequenceSelect.addEventListener('change', visualizeDNA);
}

// Inicializar página de resultados
document.addEventListener('DOMContentLoaded', function() {
    // Visualizar secuencia de ADN
    visualizeDNA();
    
    // Configurar selector de secuencia
    setupSequenceSelector();
    
    // Configurar búsqueda de motivos
    const motifInput = document.getElementById('motif-input');
    const searchBtn = document.querySelector('.panel:has(#motif-input) .btn-primary');
    
    if (motifInput && searchBtn) {
        searchBtn.addEventListener('click', function() {
            const motif = motifInput.value.trim().toUpperCase();
            if (motif) {
                // Simular búsqueda
                const resultsList = searchBtn.closest('.panel').querySelector('ul');
                if (resultsList) {
                    resultsList.innerHTML = '';
                    
                    // Generar resultados ficticios
                    const positions = [
                        Math.floor(Math.random() * 1000),
                        Math.floor(Math.random() * 1000),
                        Math.floor(Math.random() * 1000),
                        Math.floor(Math.random() * 1000)
                    ].sort((a, b) => a - b);
                    
                    positions.forEach(pos => {
                        const li = document.createElement('li');
                        li.textContent = `Posición ${pos}-${pos + motif.length}: ${motif}`;
                        resultsList.appendChild(li);
                    });
                }
            }
        });
    }
});<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GenomicsFreedom - Exploración Genómica Creativa</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/styles.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<body>
    <!-- Fondo interactivo con partículas -->
    <div id="interactive-bg"></div>

    <!-- Cabecera con título -->
    <header>
        <h1 class="logo">GenomicsFreedom</h1>
        <p class="tagline">Exploración libre de patrones genómicos más allá de las reglas convencionales</p>
    </header>

    <!-- Sección "About Us" -->
    <section id="about">
        <h2><i class="fas fa-dna"></i> About Us</h2>
        <div class="about-content">
            <p>Bienvenido a <span class="highlight">GenomicsFreedom</span>, una plataforma innovadora diseñada para la enseñanza de genómica y la exploración creativa de secuencias genéticas.</p>
            
            <p>Nuestra misión es proporcionar un entorno donde puedas no solo aprender los principios fundamentales del análisis genómico, sino también <span class="highlight">jugar con parámetros y descubrir nuevos patrones</span> que no podrías identificar siguiendo reglas estrictas y convencionales.</p>
            
            <p>A diferencia de los enfoques tradicionales que limitan el análisis a lecturas específicas, en GenomicsFreedom fomentamos la experimentación. Por ejemplo, aquí puedes aplicar distribuciones de k-mers no solo a los reads, sino también a <span class="highlight">genes completos</span>, permitiendo descubrimientos que los métodos convencionales podrían pasar por alto.</p>
            
            <p>Nuestra plataforma combina herramientas profesionales con una interfaz elegante e intuitiva, diseñada para investigadores, estudiantes y entusiastas de la genómica que buscan una experiencia de análisis más flexible y creativa.</p>
        </div>
    </section>

    <!-- Sección de entrada de secuencias -->
    <section id="sequence-input">
        <h2><i class="fas fa-code"></i> Ingresar Secuencias</h2>
        
        <form action="/analyze" method="POST" enctype="multipart/form-data">
            <div class="sequence-input-container">
                <!-- Entrada manual -->
                <div class="input-method">
                    <h3>Ingreso Manual</h3>
                    
                    <div id="manual-sequences">
                        <div class="sequence-entry">
                            <div class="form-group">
                                <label for="sequence-title">Título de la Secuencia</label>
                                <input type="text" name="manual_titles[]" placeholder="Ej: Gen BRCA1 humano">
                            </div>
                            
                            <div class="form-group">
                                <label for="sequence-data">Secuencia Genética (ADN)</label>
                                <textarea name="manual_sequences[]" placeholder="Ingresa la secuencia de nucleótidos (A, T, C, G)..."></textarea>
                            </div>
                        </div>
                    </div>
                    
                    <div class="action-buttons">
                        <button type="button" class="btn btn-secondary" id="add-sequence">
                            <i class="fas fa-plus"></i> Añadir Otra Secuencia
                        </button>
                    </div>
                </div>
                
                <!-- Carga de archivo -->
                <div class="input-method">
                    <h3>Cargar Archivo FASTA</h3>
                    
                    <div class="form-group">
                        <label for="fasta-file">Seleccionar archivo .fasta</label>
                        <input type="file" id="fasta-file" name="fasta_file" accept=".fasta,.fa">
                    </div>
                    
                    <div class="form-group">
                        <label for="file-content">Vista Previa del Archivo</label>
                        <textarea id="file-content" readonly placeholder="El contenido del archivo FASTA aparecerá aquí..."></textarea>
                    </div>
                    
                    <p style="color: var(--text-gray); margin-top: 1rem;">
                        <i class="fas fa-info-circle"></i> Formatos soportados: FASTA (.fasta, .fa)
                    </p>
                </div>
            </div>
            
            <div class="action-buttons" style="margin-top: 2rem; justify-content: center;">
                <button type="submit" class="btn btn-primary" id="execute-btn" style="padding: 15px 40px; font-size: 1.2rem;">
                    <i class="fas fa-play"></i> Ejecutar Análisis
                </button>
            </div>
        </form>
    </section>

    <!-- Sección de características adicionales -->
    <section id="features">
        <h2><i class="fas fa-flask"></i> Nuestras Herramientas</h2>
        
        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 1.5rem; margin-top: 1.5rem;">
            <div style="background-color: rgba(42, 157, 143, 0.1); padding: 1.5rem; border-radius: 10px; border-left: 4px solid var(--accent-green);">
                <h3 style="color: var(--accent-green); margin-bottom: 1rem;"><i class="fas fa-chart-bar"></i> Análisis K-mer</h3>
                <p>Distribución avanzada de k-mers aplicable a reads y genes completos para descubrir patrones ocultos.</p>
            </div>
            
            <div style="background-color: rgba(69, 123, 157, 0.1); padding: 1.5rem; border-radius: 10px; border-left: 4px solid var(--accent-blue);">
                <h3 style="color: var(--accent-blue); margin-bottom: 1rem;"><i class="fas fa-search"></i> Búsqueda de Motivos</h3>
                <p>Identifica motivos genéticos y secuencias regulatorias con algoritmos personalizables.</p>
            </div>
            
            <div style="background-color: rgba(106, 76, 147, 0.1); padding: 1.5rem; border-radius: 10px; border-left: 4px solid var(--accent-purple);">
                <h3 style="color: var(--accent-purple); margin-bottom: 1rem;"><i class="fas fa-align-left"></i> Alineamiento</h3>
                <p>Herramientas de alineamiento múltiple con visualización de matrices de similitud.</p>
            </div>
        </div>
    </section>

    <script src="{{ url_for('static', filename='js/main.js') }}"></script>
</body>
</html><!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Resultados - GenomicsFreedom</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/styles.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/results.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="{{ url_for('static', filename='js/main.js') }}"></script>

</head>
<body>
    <!-- Fondo interactivo con partículas -->
    <div id="interactive-bg"></div>

    <!-- Cabecera con título -->
    <header>
        <h1 class="logo">GenomicsFreedom</h1>
        <p class="tagline">Resultados del análisis genómico</p>
    </header>

    <!-- Resultados del análisis -->
    <div class="results-container">
        <div class="results-content">
            <a href="{{ url_for('index') }}" class="btn btn-secondary" style="position: absolute; top: 20px; right: 20px;">
                <i class="fas fa-arrow-left"></i> Volver
            </a>
            
            <h2 style="color: var(--primary-red);"><i class="fas fa-chart-line"></i> Resultados del Análisis Genómico</h2>
            <p style="color: var(--text-gray); margin-bottom: 1.5rem;">Análisis de secuencias basado en los parámetros proporcionados</p>
            
            <div class="panel-grid">
                <!-- Panel de estadísticas globales -->
                <div class="panel">
                    <h3><i class="fas fa-globe"></i> Estadísticas Globales</h3>
                    <div class="stats-grid">
                        <div class="stat-card">
                            <div class="stat-value">{{ global_stats.total_sequences }}</div>
                            <div class="stat-label">Secuencias</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-value">{{ global_stats.total_bases }}</div>
                            <div class="stat-label">Bases Totales</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-value">{{ global_stats.avg_gc|round(2) }}%</div>
                            <div class="stat-label">GC Promedio</div>
                        </div>
                    </div>
                    
                    <div style="margin-top: 1.5rem;">
                        <h4>Distribución de Bases</h4>
                        <div class="base-distribution">
                            <div class="base-item">
                                <span class="base-label A">A:</span>
                                <span class="base-value">{{ global_stats.base_percentages['A']|round(2) }}%</span>
                            </div>
                            <div class="base-item">
                                <span class="base-label T">T:</span>
                                <span class="base-value">{{ global_stats.base_percentages['T']|round(2) }}%</span>
                            </div>
                            <div class="base-item">
                                <span class="base-label C">C:</span>
                                <span class="base-value">{{ global_stats.base_percentages['C']|round(2) }}%</span>
                            </div>
                            <div class="base-item">
                                <span class="base-label G">G:</span>
                                <span class="base-value">{{ global_stats.base_percentages['G']|round(2) }}%</span>
                            </div>
                            <div class="base-item">
                                <span class="base-label N">N:</span>
                                <span class="base-value">{{ global_stats.base_percentages.get('N', 0)|round(2) }}%</span>
                            </div>
                        </div>
                    </div>
                    
                    <div style="margin-top: 1.5rem; background-color: rgba(30,30,30,0.5); padding: 15px; border-radius: 8px;">
                        <h4>Distribución de Longitudes</h4>
                        <img src="{{ histogram_img }}" alt="Histograma de longitudes" style="width: 100%; border-radius: 8px;">
                    </div>
                </div>
                
                <!-- Panel de estadísticas por secuencia -->
                <div class="panel">
                    <h3><i class="fas fa-list"></i> Estadísticas por Secuencia</h3>
                    
                    <div class="sequence-stats-container">
                        {% for seq in sequences %}
                        <div class="sequence-stat-card">
                            <h4>{{ seq.title }}</h4>
                            <div class="seq-stats-grid">
                                <div class="seq-stat">
                                    <span class="seq-stat-label">Longitud:</span>
                                    <span class="seq-stat-value">{{ seq.length }} bp</span>
                                </div>
                                <div class="seq-stat">
                                    <span class="seq-stat-label">GC:</span>
                                    <span class="seq-stat-value">{{ seq.gc|round(2) }}%</span>
                                </div>
                                <div class="seq-stat">
                                    <span class="seq-stat-label">A:</span>
                                    <span class="seq-stat-value">{{ seq.bases['A'] }}</span>
                                </div>
                                <div class="seq-stat">
                                    <span class="seq-stat-label">T:</span>
                                    <span class="seq-stat-value">{{ seq.bases['T'] }}</span>
                                </div>
                                <div class="seq-stat">
                                    <span class="seq-stat-label">C:</span>
                                    <span class="seq-stat-value">{{ seq.bases['C'] }}</span>
                                </div>
                                <div class="seq-stat">
                                    <span class="seq-stat-label">G:</span>
                                    <span class="seq-stat-value">{{ seq.bases['G'] }}</span>
                                </div>
                                <div class="seq-stat">
                                    <span class="seq-stat-label">N:</span>
                                    <span class="seq-stat-value">{{ seq.bases.get('N', 0) }}</span>
                                </div>
                            </div>
                        </div>
                        {% endfor %}
                    </div>
                </div>
                
                <!-- Panel de visualización -->
                <div class="panel">
                    <h3><i class="fas fa-eye"></i> Visualización de Secuencia</h3>
                    <div class="dna-visualization">
                        <div style="display: flex; flex-wrap: wrap; gap: 2px;" id="dna-sequence-display">
                            <!-- Visualización de ADN generada por JS -->
                        </div>
                    </div>
                    
                    <div style="margin-top: 1.5rem;">
                        <label for="sequence-select">Seleccionar secuencia:</label>
                        <select id="sequence-select" class="form-control">
                            {% for seq in sequences %}
                            <option value="{{ loop.index0 }}">{{ seq.title }}</option>
                            {% endfor %}
                        </select>
                    </div>
                    
                    <div style="margin-top: 1.5rem; display: flex; gap: 1rem;">
                        <button class="btn btn-secondary">Exportar FASTA</button>
                        <button class="btn btn-secondary">Generar Gráfico</button>
                    </div>
                </div>
                
                <!-- Panel de búsqueda de motivos -->
                <div class="panel">
                    <h3><i class="fas fa-search"></i> Búsqueda de Motivos</h3>
                    <div class="form-group">
                        <label for="motif-input">Ingrese motivo a buscar</label>
                        <input type="text" id="motif-input" placeholder="Ej: ATGCTA" value="ATGCTA">
                    </div>
                    <button class="btn btn-primary" style="width: 100%;">Buscar Motivo</button>
                    
                    <div style="margin-top: 1.5rem;">
                        <h4>Resultados de la búsqueda:</h4>
                        <ul style="margin-top: 1rem; padding-left: 1.5rem; color: var(--text-gray);">
                            <li>Posición 124-129: ATGCTA</li>
                            <li>Posición 458-463: ATGCTA</li>
                            <li>Posición 892-897: ATGCTA</li>
                            <li>Posición 1120-1125: ATGCTA</li>
                        </ul>
                    </div>
                </div>
                
                <!-- Panel de salida completo -->
                <div class="panel panel-full">
                    <h3><i class="fas fa-file-code"></i> Salida Completa del Análisis</h3>
                    <div style="background-color: rgba(0, 0, 0, 0.3); padding: 1rem; border-radius: 8px; margin-top: 1rem; max-height: 300px; overflow-y: auto;">
                        <pre style="color: var(--text-gray); font-family: monospace; line-height: 1.4;" id="full-analysis-output">
GenomicsFreedom Analysis Report
==============================

{% for seq in sequences %}
Sequence: {{ seq.title }}
Length: {{ seq.length }} bp
GC Content: {{ seq.gc|round(2) }}%
Base Composition:
  A: {{ seq.bases['A'] }} ({{ (seq.bases['A'] / seq.length * 100)|round(2) }}%)
  T: {{ seq.bases['T'] }} ({{ (seq.bases['T'] / seq.length * 100)|round(2) }}%)
  C: {{ seq.bases['C'] }} ({{ (seq.bases['C'] / seq.length * 100)|round(2) }}%)
  G: {{ seq.bases['G'] }} ({{ (seq.bases['G'] / seq.length * 100)|round(2) }}%)
  N: {{ seq.bases.get('N', 0) }} ({{ (seq.bases.get('N', 0) / seq.length * 100)|round(2) }}%)

{% endfor %}
Global Statistics:
  Total Sequences: {{ global_stats.total_sequences }}
  Total Bases: {{ global_stats.total_bases }}
  Average GC Content: {{ global_stats.avg_gc|round(2) }}%
  Base Distribution:
    A: {{ global_stats.base_percentages['A']|round(2) }}%
    T: {{ global_stats.base_percentages['T']|round(2) }}%
    C: {{ global_stats.base_percentages['C']|round(2) }}%
    G: {{ global_stats.base_percentages['G']|round(2) }}%
    N: {{ global_stats.base_percentages.get('N', 0)|round(2) }}%
                        </pre>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="{{ url_for('static', filename='js/results.js') }}"></script>
</body>
</html>